const express = require('express');
const axios = require('axios');
const cors = require('cors');
const dotenv = require('dotenv');

dotenv.config();

const app = express();
const PORT = process.env.PORT || 5001;

const FINHUB_API_KEY = process.env.FINHUB_API_KEY;
const NEWS_API_KEY = process.env.NEWS_API_KEY;

if (!FINHUB_API_KEY) {
    console.error('ERROR: FINHUB_API_KEY is not set in .env file');
    process.exit(1);
}

app.use(cors());
app.use(express.json());

app.get('/health', (req, res) => {
    res.json({ status: 'OK', timestamp: new Date().toISOString() });
});

app.get('/api/search', async (req, res) => {
    try {
        const { q } = req.query;
        
        if (!q || q.trim().length === 0) {
            return res.status(400).json({ error: 'Search query is required' });
        }

        const response = await axios.get('https://finnhub.io/api/v1/search', {
            params: {
                q: q.trim(),
                token: FINHUB_API_KEY
            },
            timeout: 10000,
        });

        const results = (response.data.result || [])
            .filter(stock => stock.symbol && stock.description)
            .slice(0, 20)
            .map(stock => ({
                symbol: stock.symbol,
                description: stock.description,
                type: stock.type || 'Unknown',
                displaySymbol: stock.displaySymbol || stock.symbol
            }));

        res.json({
            count: results.length,
            results: results
        });

    } catch (error) {
        console.error('Error searching stocks:', error.message);
        res.status(500).json({ 
            error: 'Failed to search stocks',
            message: error.message 
        });
    }
});

app.get('/api/stock/:symbol', async (req, res) => {
    try {
        const { symbol } = req.params;
        const response = await axios.get('https://finnhub.io/api/v1/quote', {
            params: {
                symbol: symbol,
                token: FINHUB_API_KEY
            },
            timeout: 10000,
        });

        if (response.data.c === 0 && response.data.h === 0 && response.data.l === 0) {
            return res.status(404).json({ error: 'Stock not found or market closed' });
        }

        res.json(response.data);
    } catch (error) {
        console.error('Error fetching stock data:', error.message);
        res.status(500).json({ 
            error: 'Failed to fetch stock data',
            message: error.message 
        });
    }
});

app.get('/api/company/:symbol', async (req, res) => {
    try {
        const { symbol } = req.params;
        const response = await axios.get('https://finnhub.io/api/v1/stock/profile2', {
            params: {
                symbol: symbol,
                token: FINHUB_API_KEY
            },
            timeout: 10000,
        });

        if (!response.data || Object.keys(response.data).length === 0) {
            return res.status(404).json({ error: 'Company profile not found' });
        }

        res.json(response.data);
    } catch (error) {
        console.error('Error fetching company profile:', error.message);
        res.status(500).json({ 
            error: 'Failed to fetch company profile',
            message: error.message 
        });
    }
});

